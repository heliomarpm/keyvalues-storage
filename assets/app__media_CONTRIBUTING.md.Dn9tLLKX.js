import{_ as t,c as i,o as a,ae as n}from"./chunks/framework.CwTn0328.js";const g=JSON.parse('{"title":"🤝 Contributing Guide","description":"","frontmatter":{},"headers":[],"relativePath":"app/_media/CONTRIBUTING.md","filePath":"app/_media/CONTRIBUTING.md","lastUpdated":null}'),o={name:"app/_media/CONTRIBUTING.md"};function s(r,e,l,c,p,h){return a(),i("div",null,e[0]||(e[0]=[n(`<h1 id="🤝-contributing-guide" tabindex="-1">🤝 Contributing Guide <a class="header-anchor" href="#🤝-contributing-guide" aria-label="Permalink to &quot;🤝 Contributing Guide&quot;">​</a></h1><p>Thank you for considering contributing to this project! Your help makes it better.</p><h2 id="📌-how-to-contribute" tabindex="-1">📌 How to Contribute <a class="header-anchor" href="#📌-how-to-contribute" aria-label="Permalink to &quot;📌 How to Contribute&quot;">​</a></h2><ol><li><p><strong>Fork the repository</strong></p></li><li><p><strong>Create a new branch</strong> for your fix or feature:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> checkout</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -b</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> feature/my-new-feature</span></span></code></pre></div></li><li><p><strong>Commit your changes</strong> using <a href="https://www.conventionalcommits.org/en/v1.0.0/" target="_blank" rel="noreferrer">Conventional Commits</a></p></li><li><p><strong>Push to your fork</strong> and open a Pull Request</p></li></ol><h2 id="📖-contribution-rules" tabindex="-1">📖 Contribution Rules <a class="header-anchor" href="#📖-contribution-rules" aria-label="Permalink to &quot;📖 Contribution Rules&quot;">​</a></h2><ul><li>Follow existing code style and naming conventions.</li><li>Add clear and descriptive commit messages.</li><li>Update or add tests when applicable.</li><li>If adding new features, update the documentation.</li></ul><h2 id="commit-message-format" tabindex="-1">Commit Message Format <a class="header-anchor" href="#commit-message-format" aria-label="Permalink to &quot;Commit Message Format&quot;">​</a></h2><p>All commit messages on <code>main</code> should follow the conventional commits format. For example:</p><div class="language-text vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span> feat: Allowed provided config object to extend other configs</span></span>
<span class="line"><span>  ^</span></span>
<span class="line"><span>(type)</span></span></code></pre></div><p>The supported types are:</p><ul><li>No version update: <ul><li><strong>build</strong>: Changes that affect the build system or external dependencies (example scopes: gulp, broccoli, npm)</li><li><strong>chore</strong>: A change that doesn&#39;t fall under any other types that affect the patch version such as removing an unused file</li><li><strong>ci</strong>: Changes to the CI configuration files and scripts</li><li><strong>docs</strong>: Documentation only changes</li><li><strong>perf</strong>: A code change that improves performance</li><li><strong>refactor</strong>: A code change that neither fixes a bug nor adds a feature</li><li><strong>style</strong>: Changes that do not affect the meaning of the code (white-space, formatting, missing semi-colons, etc)</li><li><strong>test</strong>: Adding missing tests or correcting existing tests</li></ul></li><li>Patch version update: <ul><li><strong>fix</strong>: A bug fix</li><li><strong>revert</strong>: Reverts a previous commit</li></ul></li><li>Minor version update: <ul><li><strong>feat</strong>: A new feature</li></ul></li><li>Major version update: <ul><li><strong>breaking</strong> or <strong>breaking change</strong>: A breaking change</li></ul></li></ul><h2 id="📑-license" tabindex="-1">📑 License <a class="header-anchor" href="#📑-license" aria-label="Permalink to &quot;📑 License&quot;">​</a></h2><p>By contributing, you agree that your contributions will be licensed under the project’s <a href="./LICENSE">MIT License</a>.</p><p>Thanks for helping improve this project! 🚀</p>`,14)]))}const u=t(o,[["render",s]]);export{g as __pageData,u as default};
